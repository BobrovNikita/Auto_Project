// <auto-generated />
using System;
using Andasuk;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Andasuk.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Andasuk.Models.Car", b =>
                {
                    b.Property<Guid>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Capacity")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DatePO")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateProduction")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mark")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Power")
                        .HasColumnType("int");

                    b.HasKey("CarId");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("Andasuk.Models.CarProduct", b =>
                {
                    b.Property<Guid>("CarProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CarProductId");

                    b.HasIndex("CarId");

                    b.HasIndex("ProductId");

                    b.ToTable("CarProducts");
                });

            modelBuilder.Entity("Andasuk.Models.Catalog", b =>
                {
                    b.Property<Guid>("CatalogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CatalogId");

                    b.ToTable("Catalogs");
                });

            modelBuilder.Entity("Andasuk.Models.Creator", b =>
                {
                    b.Property<Guid>("CreatorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UNP")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CreatorId");

                    b.ToTable("Creators");
                });

            modelBuilder.Entity("Andasuk.Models.Product", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("SpareId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProductId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("SpareId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Andasuk.Models.Spare", b =>
                {
                    b.Property<Guid>("SpareId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CatalogId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SpareId");

                    b.HasIndex("CatalogId");

                    b.ToTable("Spares");
                });

            modelBuilder.Entity("Andasuk.Models.CarProduct", b =>
                {
                    b.HasOne("Andasuk.Models.Car", "Car")
                        .WithMany("CarProducts")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Andasuk.Models.Product", "Product")
                        .WithMany("CarProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Andasuk.Models.Product", b =>
                {
                    b.HasOne("Andasuk.Models.Creator", "Creator")
                        .WithMany("Products")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Andasuk.Models.Spare", "Spare")
                        .WithMany("Products")
                        .HasForeignKey("SpareId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Creator");

                    b.Navigation("Spare");
                });

            modelBuilder.Entity("Andasuk.Models.Spare", b =>
                {
                    b.HasOne("Andasuk.Models.Catalog", "Catalog")
                        .WithMany("Spares")
                        .HasForeignKey("CatalogId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Catalog");
                });

            modelBuilder.Entity("Andasuk.Models.Car", b =>
                {
                    b.Navigation("CarProducts");
                });

            modelBuilder.Entity("Andasuk.Models.Catalog", b =>
                {
                    b.Navigation("Spares");
                });

            modelBuilder.Entity("Andasuk.Models.Creator", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Andasuk.Models.Product", b =>
                {
                    b.Navigation("CarProducts");
                });

            modelBuilder.Entity("Andasuk.Models.Spare", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
